@{
    ViewBag.Title = "DangKy";
    Layout = "~/Views/Shared/_LayoutHome.cshtml";
}
<style>
    .breadcrumb-area {
        background-image: url('@Url.Content("~/assets/images/banner/banner3.jpg")'); /* Đường dẫn tới hình ảnh */
    }
</style>
<div class="breadcrumb-area">
    <div class="container">
        <div class="breadcrumb-content">
            <h2>Đăng ký</h2>a
            <ul>
                <li><a href="@Url.Action("Index", "Home")">Trang chủ</a></li>
                <li class="active">Đăng ký</li>
            </ul>
        </div>
    </div>
</div>
<!-- Uren's Breadcrumb Area End Here -->
<!-- Begin Uren's Login Register Area -->
<div class="uren-login-register_area" style="margin-left:30%">
    <div class="container-fluid">
        <div class="col-sm-12 col-md-12 col-lg-6 col-xs-12">
            <form action="@Url.Action("DangKy", "Home")" method="post">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="login-form">
                    <h4 class="login-title">Đăng ký</h4>
                    <div class="row">
                        <div class="col-md-12">
                            <label>Họ và tên</label>
                            <input type="text" name="HoTen" placeholder="Vui lòng nhập họ và tên" required>
                            @if (ViewData.ModelState.ContainsKey("HoTen") && ViewData.ModelState["HoTen"].Errors.Count > 0)
                            {
                                <span class="text-danger">@ViewData.ModelState["HoTen"].Errors[0].ErrorMessage</span>
                            }
                        </div>
                        <div class="col-md-12">
                            <label>Tên đăng nhập*</label>
                            <input type="text" name="Username" placeholder="Vui lòng nhập tên đăng nhập" required>
                            @if (ViewData.ModelState.ContainsKey("Username") && ViewData.ModelState["Username"].Errors.Count > 0)
                            {
                                <span class="text-danger">@ViewData.ModelState["Username"].Errors[0].ErrorMessage</span>
                            }
                        </div>
                        <div class="col-md-12">
                            <label>Email*</label>
                            <input type="email" name="Email" placeholder="Vui lòng nhập email" required>
                            @if (ViewData.ModelState.ContainsKey("Email") && ViewData.ModelState["Email"].Errors.Count > 0)
                            {
                                <span class="text-danger">@ViewData.ModelState["Email"].Errors[0].ErrorMessage</span>
                            }
                        </div>
                        <!-- Thay thế phần địa chỉ hiện tại -->
                        <div class="col-md-12">
                            <label>Địa chỉ*</label>
                            <div class="row">
                                <div class="col-md-4 mb-3">
                                    <label>Tỉnh/Thành phố*</label>
                                    <select id="province" class="form-control" onchange="loadDistricts()" required>
                                        <option value="">Chọn Tỉnh/Thành phố</option>
                                        <!-- Tỉnh/thành phố sẽ được điền bởi JavaScript -->
                                    </select>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label>Quận/Huyện*</label>
                                    <select id="district" class="form-control" disabled onchange="loadWards()" required>
                                        <option value="">Chọn Quận/Huyện</option>
                                        <!-- Quận/huyện sẽ được điền bởi JavaScript -->
                                    </select>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label>Phường/Xã*</label>
                                    <select id="ward" class="form-control" disabled required>
                                        <option value="">Chọn Phường/Xã</option>
                                    </select>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-md-12 mb-3">
                                    <label>Địa chỉ chi tiết*</label>
                                    <input type="text" id="addressDetail" class="form-control" placeholder="Số nhà, tên đường" required>
                                </div>
                            </div>
                            <!-- Trường ẩn để lưu địa chỉ đầy đủ -->
                            <input type="hidden" name="DiaChi" id="fullAddress">
                            @if (ViewData.ModelState.ContainsKey("DiaChi") && ViewData.ModelState["DiaChi"].Errors.Count > 0)
                            {
                                <span class="text-danger">@ViewData.ModelState["DiaChi"].Errors[0].ErrorMessage</span>
                            }
                        </div>
                        <div class="col-md-12">
                            <label>Số điện thoại*</label>
                            <input type="text" name="SoDienThoai" placeholder="Vui lòng nhập số điện thoại" required>
                            @if (ViewData.ModelState.ContainsKey("SoDienThoai") && ViewData.ModelState["SoDienThoai"].Errors.Count > 0)
                            {
                                <span class="text-danger">@ViewData.ModelState["SoDienThoai"].Errors[0].ErrorMessage</span>
                            }
                        </div>
                        <div class="col-md-6">
                            <label>Mật khẩu</label>
                            <input type="password" name="Password" placeholder="Vui lòng nhập mật khẩu" required>
                            @if (ViewData.ModelState.ContainsKey("Password") && ViewData.ModelState["Password"].Errors.Count > 0)
                            {
                                <span class="text-danger">@ViewData.ModelState["Password"].Errors[0].ErrorMessage</span>
                            }
                        </div>
                        <div class="col-md-6">
                            <label>Nhập lại mật khẩu</label>
                            <input type="password" name="XacNhanMatKhau" placeholder="Vui lòng nhập lại mật khẩu" required>
                            @if (ViewData.ModelState.ContainsKey("XacNhanMatKhau") && ViewData.ModelState["XacNhanMatKhau"].Errors.Count > 0)
                            {
                                <span class="text-danger">@ViewData.ModelState["XacNhanMatKhau"].Errors[0].ErrorMessage</span>
                            }
                        </div>
                        <div class="col-12">
                            <button class="uren-register_btn" type="submit">Đăng ký</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // Biến lưu trữ dữ liệu tỉnh/thành phố và quận/huyện
    let provinces = [];
    let districts = [];

    // Gọi API để lấy danh sách tỉnh/thành phố khi trang được tải
    document.addEventListener('DOMContentLoaded', function () {
        loadProvinces();

        // Thêm sự kiện submit form để cập nhật trường địa chỉ đầy đủ
        document.querySelector('form').addEventListener('submit', function (e) {
            updateFullAddress();
        });

        // Thêm sự kiện input cho trường địa chỉ chi tiết
        document.getElementById('addressDetail').addEventListener('input', function () {
            updateFullAddress();
        });
        //// Lấy danh sách phường/xã khi chọn quận/huyện
        //document.getElementById('district').addEventListener('change', function () {
        //    loadWards();
        //    updateFullAddress();
        //});

    });

    // Hàm lấy danh sách tỉnh/thành phố từ API
    function loadProvinces() {
        fetch('https://provinces.open-api.vn/api/p/')
            .then(response => response.json())
            .then(data => {
                provinces = data;
                const provinceSelect = document.getElementById('province');

                // Xóa tất cả các option hiện tại
                provinceSelect.innerHTML = '<option value="">Chọn Tỉnh/Thành phố</option>';

                // Thêm các option tỉnh/thành phố
                provinces.forEach(province => {
                    const option = document.createElement('option');
                    option.value = province.code;
                    option.textContent = province.name;
                    provinceSelect.appendChild(option);
                });
            })
            .catch(error => {
                console.error('Lỗi khi tải danh sách tỉnh/thành phố:', error);
                alert('Không thể tải danh sách tỉnh/thành phố. Vui lòng thử lại sau.');
            });
    }

    // Hàm lấy danh sách quận/huyện theo tỉnh/thành phố từ API
    function loadDistricts() {
        const provinceCode = document.getElementById('province').value;
        const districtSelect = document.getElementById('district');

        // Reset quận/huyện
        districtSelect.innerHTML = '<option value="">Chọn Quận/Huyện</option>';

        if (!provinceCode) {
            districtSelect.disabled = true;
            updateFullAddress();
            return;
        }

        fetch(`https://provinces.open-api.vn/api/p/${provinceCode}?depth=3`)
            .then(response => response.json())
            .then(data => {
                districts = data.districts;

                // Thêm các option quận/huyện
                districts.forEach(district => {
                    const option = document.createElement('option');
                    option.value = district.code;
                    option.textContent = district.name;
                    districtSelect.appendChild(option);
                });

                districtSelect.disabled = false;
                updateFullAddress();
            })
            .catch(error => {
                console.error('Lỗi khi tải danh sách quận/huyện:', error);
                alert('Không thể tải danh sách quận/huyện. Vui lòng thử lại sau.');
            });
    }
    // Hàm load phường/xã
    function loadWards() {
        const districtCode = document.getElementById('district').value;
        const wardSelect = document.getElementById('ward');

        wardSelect.innerHTML = '<option value="">Chọn Phường/Xã</option>';

        if (!districtCode) {
            wardSelect.disabled = true;
            updateFullAddress();
            return;
        }

        // Tìm quận trong danh sách districts đã load trước đó
        const selectedDistrict = districts.find(d => d.code == districtCode);

        if (selectedDistrict && selectedDistrict.wards) {
            selectedDistrict.wards.forEach(ward => {
                const option = document.createElement('option');
                option.value = ward.code;
                option.textContent = ward.name;
                wardSelect.appendChild(option);
            });

            wardSelect.disabled = false;
        } else {
            wardSelect.disabled = true;
        }

        updateFullAddress();
    }
    function updateFullAddress() {
        const provinceSelect = document.getElementById('province');
        const districtSelect = document.getElementById('district');
        const wardSelect = document.getElementById('ward');
        const addressDetail = document.getElementById('addressDetail').value.trim();
        const fullAddressInput = document.getElementById('fullAddress');

        let fullAddress = '';

        if (addressDetail) fullAddress += addressDetail;

        if (wardSelect && wardSelect.value) {
            const selectedDistrict = districts.find(d => d.code == districtSelect.value);
            const selectedWard = selectedDistrict?.wards?.find(w => w.code == wardSelect.value);
            if (selectedWard && fullAddress) fullAddress += ', ';
            if (selectedWard) fullAddress += selectedWard.name;
        }

        if (districtSelect.value) {
            const selectedDistrict = districts.find(d => d.code == districtSelect.value);
            if (selectedDistrict && fullAddress) fullAddress += ', ';
            if (selectedDistrict) fullAddress += selectedDistrict.name;
        }

        if (provinceSelect.value) {
            const selectedProvince = provinces.find(p => p.code == provinceSelect.value);
            if (selectedProvince && fullAddress) fullAddress += ', ';
            if (selectedProvince) fullAddress += selectedProvince.name;
        }

        fullAddressInput.value = fullAddress;
    }

</script>
